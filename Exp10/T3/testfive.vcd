$date
	Tue Jan 29 08:39:31 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_four_bit_adder $end
$var wire 4 ! sum2 [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % s $end
$scope module DUT $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % s $end
$var wire 4 ( sum2 [3:0] $end
$var wire 4 ) sum [3:0] $end
$var wire 1 * cout1 $end
$var wire 1 " cout $end
$var wire 4 + ca2 [3:0] $end
$var wire 4 , ca [3:0] $end
$var wire 4 - c [3:0] $end
$scope module b1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 carry $end
$var wire 1 1 sum $end
$upscope $end
$scope module b2 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 carryin $end
$var wire 1 5 carryout $end
$var wire 1 6 sum $end
$var wire 1 7 w1 $end
$var wire 1 8 w2 $end
$var wire 1 9 w3 $end
$upscope $end
$scope module b3 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < carryin $end
$var wire 1 = carryout $end
$var wire 1 > sum $end
$var wire 1 ? w1 $end
$var wire 1 @ w2 $end
$var wire 1 A w3 $end
$upscope $end
$scope module b4 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D carryin $end
$var wire 1 * carryout $end
$var wire 1 E sum $end
$var wire 1 F w1 $end
$var wire 1 G w2 $end
$var wire 1 H w3 $end
$upscope $end
$scope module q1 $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K carry $end
$var wire 1 L sum $end
$upscope $end
$scope module q2 $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O carryin $end
$var wire 1 P carryout $end
$var wire 1 Q sum $end
$var wire 1 R w1 $end
$var wire 1 S w2 $end
$var wire 1 T w3 $end
$upscope $end
$scope module q3 $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 W carryin $end
$var wire 1 X carryout $end
$var wire 1 Y sum $end
$var wire 1 Z w1 $end
$var wire 1 [ w2 $end
$var wire 1 \ w3 $end
$upscope $end
$scope module q4 $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 _ carryin $end
$var wire 1 " carryout $end
$var wire 1 ` sum $end
$var wire 1 a w1 $end
$var wire 1 b w2 $end
$var wire 1 c w3 $end
$upscope $end
$scope module s0 $end
$var wire 1 d a $end
$var wire 1 e out $end
$var wire 1 % s $end
$upscope $end
$scope module s1 $end
$var wire 1 f a $end
$var wire 1 g out $end
$var wire 1 % s $end
$upscope $end
$scope module s2 $end
$var wire 1 h a $end
$var wire 1 i out $end
$var wire 1 % s $end
$upscope $end
$scope module s3 $end
$var wire 1 j a $end
$var wire 1 k out $end
$var wire 1 % s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
bx -
bxz ,
bxz +
x*
bx )
bx (
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#10
0`
0_
0X
0"
0Y
0\
0c
0W
0Z
0a
0P
0U
0]
1Q
0T
0>
0E
1O
0R
0<
0D
b10 !
b10 (
0L
b1z +
1K
0M
05
0=
0*
1I
06
09
0A
0H
b1 )
11
04
07
08
0?
0@
0F
0G
1/
03
0;
0C
b0z ,
00
02
0:
0B
1e
0g
0i
b1 -
0k
0S
0[
0b
0.
1d
0f
0h
0j
1J
0N
0V
0^
1%
b1 $
b1 '
b1 #
b1 &
#20
0Y
0W
0P
0O
1Q
0T
b11 !
b11 (
1L
b0z +
0K
1R
0J
1N
b10 #
b10 &
#30
1Y
1W
1P
0Q
1T
1O
b100 !
b100 (
0L
b11z +
1K
1J
b11 #
b11 &
#40
1"
1c
1_
1X
1\
0*
0H
0D
0=
0`
0A
1M
1Z
1a
0<
16
1U
1]
0Y
1O
05
1>
1E
1W
0L
1K
09
17
1?
1F
b111z +
1P
1I
04
0/
13
1;
1C
b0 !
b0 (
0Q
1T
b1111 )
11
b0z ,
00
0e
1g
1i
b1110 -
1k
1R
1.
0N
0%
b1 #
b1 &
#50
0O
0Q
0T
b1 !
b1 (
1L
b110z +
0K
0R
1S
0J
1N
b10 #
b10 &
#60
1Q
1O
b10 !
b10 (
0L
b111z +
1K
1J
b11 #
b11 &
#70
