$date
	Tue Jan 29 01:46:01 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_four_bit_adder $end
$var wire 4 ! sum2 [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$scope module DUT $end
$var wire 1 % S $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 4 ( sum2 [3:0] $end
$var wire 4 ) sum [3:0] $end
$var wire 1 * cout1 $end
$var wire 1 " cout $end
$var wire 4 + ca2 [3:0] $end
$var wire 4 , ca [3:0] $end
$var wire 4 - c [3:0] $end
$var reg 1 . s $end
$scope module b1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 carry $end
$var wire 1 2 sum $end
$upscope $end
$scope module b2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 carryin $end
$var wire 1 6 carryout $end
$var wire 1 7 sum $end
$var wire 1 8 w1 $end
$var wire 1 9 w2 $end
$var wire 1 : w3 $end
$upscope $end
$scope module b3 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = carryin $end
$var wire 1 > carryout $end
$var wire 1 ? sum $end
$var wire 1 @ w1 $end
$var wire 1 A w2 $end
$var wire 1 B w3 $end
$upscope $end
$scope module b4 $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E carryin $end
$var wire 1 * carryout $end
$var wire 1 F sum $end
$var wire 1 G w1 $end
$var wire 1 H w2 $end
$var wire 1 I w3 $end
$upscope $end
$scope module q1 $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 L carry $end
$var wire 1 M sum $end
$upscope $end
$scope module q2 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 P carryin $end
$var wire 1 Q carryout $end
$var wire 1 R sum $end
$var wire 1 S w1 $end
$var wire 1 T w2 $end
$var wire 1 U w3 $end
$upscope $end
$scope module q3 $end
$var wire 1 V a $end
$var wire 1 W b $end
$var wire 1 X carryin $end
$var wire 1 Y carryout $end
$var wire 1 Z sum $end
$var wire 1 [ w1 $end
$var wire 1 \ w2 $end
$var wire 1 ] w3 $end
$upscope $end
$scope module q4 $end
$var wire 1 ^ a $end
$var wire 1 _ b $end
$var wire 1 ` carryin $end
$var wire 1 " carryout $end
$var wire 1 a sum $end
$var wire 1 b w1 $end
$var wire 1 c w2 $end
$var wire 1 d w3 $end
$upscope $end
$scope module s0 $end
$var wire 1 e a $end
$var wire 1 f out $end
$var wire 1 % s $end
$upscope $end
$scope module s1 $end
$var wire 1 g a $end
$var wire 1 h out $end
$var wire 1 % s $end
$upscope $end
$scope module s2 $end
$var wire 1 i a $end
$var wire 1 j out $end
$var wire 1 % s $end
$upscope $end
$scope module s3 $end
$var wire 1 k a $end
$var wire 1 l out $end
$var wire 1 % s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
0I
0H
xG
xF
0E
xD
0C
0B
0A
x@
x?
0>
0=
x<
0;
0:
09
x8
x7
06
05
x4
03
x2
01
x0
0/
1.
bx -
b0z ,
bxz +
0*
bx )
bx (
bx '
bx &
z%
bx $
bx #
x"
bx !
$end
#10
0T
0\
0c
1e
0g
0i
0k
1K
0O
0W
0_
b1 $
b1 '
b1 #
b1 &
#20
